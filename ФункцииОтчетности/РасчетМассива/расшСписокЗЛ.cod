extends Ѕюджет_«ѕиƒƒ.–асчетћассива.–—¬1.—писок«Ћ;

import —»—2 Classes —троковые‘ункции, ‘ункцииƒокумента, ‘ункции;
import “ЅЅ_Ѕазовый classes ‘ильтры;

inclass public

  func ѕолучить—писок‘изЋиц (aParameter: Variant[]): Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1. онтейнер;
    var _”чреждение: Ѕазовый.ƒанные.—убъект;
    var _ од в: string;
    var —тажЌ—1: logical;
    var —тажЌ—2: logical;
    var —тажЌ—3: logical;
    var —тажЌ—4: logical;
    var —таж√ѕ—: logical;
    --
    —тажЌ—1 = «начениеѕол€ќтчета(aParameter, 'л:—тажЌ—1');
    —тажЌ—2 = «начениеѕол€ќтчета(aParameter, 'л:—тажЌ—2');
    —тажЌ—3 = «начениеѕол€ќтчета(aParameter, 'л:—тажЌ—3');
    —тажЌ—4 = «начениеѕол€ќтчета(aParameter, 'л:—тажЌ—4');
    —таж√ѕ— = «начениеѕол€ќтчета(aParameter, 'л:—таж√ѕ—');
    if not (true in [—тажЌ—1,—тажЌ—2,—тажЌ—3,—тажЌ—4,—таж√ѕ—]):
      Result = extended ѕолучить—писок‘изЋиц (aParameter);
    else
      Result = Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1. онтейнер.—оздатьƒл€–—¬;
      _”чреждение = aParameter[ипƒќ].«аписьќтчета.Ќаше”чреждение;
      _ од в = «начениеѕол€ќтчета(aParameter, 'с: одѕериода');
      if («начениеѕол€ќтчета(aParameter, 'с:Ќомер орр') <> '000'):
        if —тажЌ—1: ѕолучить—писок–аботников орр (Result,  _”чреждение, _ од в, SubStr(_ од в, 1, 4) + '.1'); fi;
        if —тажЌ—2: ѕолучить—писок–аботников орр (Result,  _”чреждение, _ од в, SubStr(_ од в, 1, 4) + '.2'); fi;
        if —тажЌ—3: ѕолучить—писок–аботников орр (Result,  _”чреждение, _ од в, SubStr(_ од в, 1, 4) + '.3'); fi;
        if —тажЌ—4: ѕолучить—писок–аботников орр (Result,  _”чреждение, _ од в, SubStr(_ од в, 1, 4) + '.4'); fi;
        if —таж√ѕ—:
          ѕолучить—писокјвторов (Result,  _”чреждение, _ од в, SubStr(_ од в, 1, 4) + '.1');
          ѕолучить—писокјвторов (Result,  _”чреждение, _ од в, SubStr(_ од в, 1, 4) + '.2');
          ѕолучить—писокјвторов (Result,  _”чреждение, _ од в, SubStr(_ од в, 1, 4) + '.3');
          ѕолучить—писокјвторов (Result,  _”чреждение, _ од в, SubStr(_ од в, 1, 4) + '.4');
        fi;
      else
        Message('”слови€ заполнени€ допустимы только дл€ уточн€ющего отчета!');
      fi;
    fi;
  end;



  func ѕолучить—писок–аботников орр (var _к‘изЋица: Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1. онтейнер; _”чреждение: Ѕазовый.ƒанные.—убъект; _ од в: string; _ од орр в: string): Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1. онтейнер;
    var лок«апись оррѕериода: “ЅЅ_Ѕазовый.—правочники.ѕериоды–асчета;
    var локƒатаЌачала,  локƒатаќкончани€: date;
    var лок“ест: logical;
    var QResult: variant[2];
    var locFlt, aCode: string[];
    var locElt: Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1.Ёлемент;
    var локѕериоды—трахового—тажа: variant[2];
    var p, pp: integer;
    if (_к‘изЋица = nil):
      _к‘изЋица = Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1. онтейнер.—оздатьƒл€–—¬;
    fi;
    лок«апись оррѕериода = QueryRecord(“ЅЅ_Ѕазовый.—правочники.ѕериоды–асчета, ' од="' + _ од орр в + '"');
    if (лок«апись оррѕериода <> nil):
      локƒатаЌачала    = лок«апись оррѕериода.ƒатаЌачала;
      локƒатаќкончани€ = лок«апись оррѕериода.ƒатаќкончани€;
      with Query.Create([“ЅЅ_Ѕазовый.—правочники.ѕериоды–асчета]) do
        Filter = 'GroupDoc=' + Str(лок«апись оррѕериода);
        QResult = CalcAggregates('GroupBy( од)') as variant[2];
        aCode = QResult[1] as string[];
      end;
      with Query.Create([Ѕюджет_ѕерсонал.јтрибуты—отрудника.ѕериод–аботы]) do
        locFlt[1] = ‘ильтрѕоƒатам(локƒатаЌачала,  локƒатаќкончани€);
        locFlt[2] = '—отрудник.Ќаше”чреждение=' + Str(_”чреждение);
        locFlt[3] = '‘орма«ачислени€. од in ["00000","00001","00002","00003"]'; -- отсекли разовых подр€дчиков, не должных иметь стажа
        Filter = —ложить—троки‘ильтраѕо»(locFlt);
        Select;
        while not Eof do
          лок“ест = false;
          локѕериоды—трахового—тажа = Ѕюджет_ѕерсонал.—траховой—тажќпс.ѕериоды—трахового—тажа‘акт(_”чреждение, Current.—отрудник.‘изЋицо, лок«апись оррѕериода) as variant[2];
          if (локѕериоды—трахового—тажа <> nil):
            pp = LengthOfArray(локѕериоды—трахового—тажа);
            for p = 1 .. pp do
              if (локѕериоды—трахового—тажа[p,3] <> nil):
                if (локѕериоды—трахового—тажа[p,3] in ['¬–Ќ≈“–”ƒ','ƒ≈ –≈“']):
                  лок“ест = true;
                  Break;
                fi;
              fi;
            od;
          fi;
          if лок“ест:
            locElt = Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1.Ёлемент.—оздатьѕо«аписи (Current.—отрудник.‘излицо, _ од в, _ од орр в, 1);
            _к‘изЋица.Add(locElt);
          fi;
          Next;
        od;
      end;
    fi;
    Return _к‘изЋица;
  end;

  --@doc —оздание списка получателей гонораров, имеющих рассчитанный стаж
  --@doc
  func ѕолучить—писокјвторов (var _к‘изЋица: Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1. онтейнер; _”чреждение: Ѕазовый.ƒанные.—убъект; _ од в: string; _ од орр в: string): Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1. онтейнер;
    var лок«аписьќтчѕериода: “ЅЅ_Ѕазовый.—правочники.ѕериоды–асчета;
    var лок«апись оррѕериода: “ЅЅ_Ѕазовый.—правочники.ѕериоды–асчета;
    var локƒатаЌачала,  локƒатаќкончани€: date;
    var locFlt: string[];
    var locElt: Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1.Ёлемент;
    if (_к‘изЋица = nil):
      _к‘изЋица = Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1. онтейнер.—оздатьƒл€–—¬;
    fi;
    лок«аписьќтчѕериода = QueryRecord(“ЅЅ_Ѕазовый.—правочники.ѕериоды–асчета, ' од="' + _ од в + '"');
    лок«апись оррѕериода = QueryRecord(“ЅЅ_Ѕазовый.—правочники.ѕериоды–асчета, ' од="' + _ од орр в + '"');
    if (лок«аписьќтчѕериода <> nil) and (лок«апись оррѕериода <> nil):
      локƒатаЌачала    = лок«апись оррѕериода.ƒатаЌачала;
      локƒатаќкончани€ = лок«апись оррѕериода.ƒатаќкончани€;
      with Query.Create([”чет—тажа.–асчетный—таж]) do
        locFlt[1] = ‘ильтрѕоƒатам(локƒатаЌачала,  локƒатаќкончани€);
        locFlt[2] = 'Ќаше”чреждение=' + Str(_”чреждение);
        Filter = —ложить—троки‘ильтраѕо»(locFlt);
        Select;
        while not Eof do
          locElt = Ѕюджет_«ѕиƒƒ.‘изЋица–—¬1.Ёлемент.—оздатьѕо«аписи (Current.—убъект, _ од в, _ од орр в, if((_ од орр в=nil), 0, 1));
          _к‘изЋица.Add(locElt);
          Next;
        od;
      end;
    fi;
  end;

end