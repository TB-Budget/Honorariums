class "Вычисление отдельных реквизитов субъекта для карточки учета гонораров";

inclass public

  func CreateEx (локСубъект: Базовый.Данные.Субъект; локДатаНачалаКарточки, локДатаОкончанияКарточки: date): КарточкаГонораров.клРеквизитыСубъекта;
    var локУдостоверение: Базовый.Справочники.Удостоверение;
    var локАдрес: Базовый.Справочники.Адрес;
    if СИС2.Исключения.ПараметрыМетодаЗаданы([локСубъект, локДатаНачалаКарточки, локДатаОкончанияКарточки], 'CreateEx'):
      Result = inherited Create;
      Result.Субъект = локСубъект;
      Result.ДатаНачалаКарточки = локДатаНачалаКарточки;
      Result.ДатаОкончанияКарточки = локДатаОкончанияКарточки;
      if (локСубъект.ФизЛицо <> nil):
        Result.ДатаРождения = локСубъект.ФизЛицо.ДатаРождения;
        Result.СНИЛС = локСубъект.ФизЛицо.НомерПФР;
        Result.ИНН = локСубъект.ФизЛицо.ИНН;
      fi;
      локУдостоверение = ТББ_Базовый.Библио.Док_НаДату (локСубъект, локДатаНачалаКарточки);
      if (локУдостоверение <> nil):
        Result.НаимДокумента    = локУдостоверение.ВидДокумента.Имя;
        Result.СерияДокумента   = локУдостоверение.Серия;
        Result.НомерДокумента   = локУдостоверение.Номер;
        Result.ДатаДокумента    = локУдостоверение.ДатаВыдачи;
        Result.КемВыданДокумент =  локУдостоверение.Кем;
      fi;
      локАдрес = Бюджет_Персонал.Библио.АдресСубъекта (локСубъект, локДатаНачалаКарточки);
      if (локАдрес <> nil):
        Result.АдресСтрокой = локАдрес.Адрес_Строкой;
        Result.Телефон = локАдрес.Телефон;
      fi;
    fi;
  end;

inobject public

  var Субъект: Базовый.Данные.Субъект;
  var ДатаНачалаКарточки: date;
  var ДатаОкончанияКарточки: date;
  --
  var ДатаРождения: date;
  var СНИЛС: string;
  var ИНН: string;
  --
  var НаимДокумента: string;
  var СерияДокумента: string;
  var НомерДокумента: string;
  var ДатаДокумента: date;
  var КемВыданДокумент: string;
  --
  var АдресСтрокой: string;
  var Телефон: string;


end