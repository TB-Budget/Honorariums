class "";

inclass public

  func CreateEx (локОперация: Бюджет_ЗПиДД.РасчетныеОперации.Начисление): КарточкаГонораров.клТегСтроки;
    var локДанныеРасчетов: Storage;
    Result = КарточкаГонораров.клТегСтроки.Create;
    Result.КодУчетногоПериода = локОперация.Расчет.УчетныйПериод.Код;
    Result.МесяцГод           = SubStr(Result.КодУчетногоПериода, 8, 2) + ' - ' + SubStr(Result.КодУчетногоПериода, 1, 4);
    Result.ОписаниеПозиции    = ПолучитьОписаниеПозиции (локОперация);
    локДанныеРасчетов         = ПолучитьДанныеРасчетов (локОперация);
    Result.Начислено          = локДанныеРасчетов.Начислено;
    Result.УдержаноНДФЛ       = локДанныеРасчетов.УдержаноНДФЛ;
    Result.УдержаноИЛ         = локДанныеРасчетов.УдержаноИЛ;
    Result.УдержаноПрочего    = локДанныеРасчетов.УдержаноПрочего;
    Result.УдержаноВсего      = локДанныеРасчетов.УдержаноВсего;
    Result.КВыдаче            = локДанныеРасчетов.КВыдаче;
    Result.ПлатежныеДокументы = ПолучитьПлатежныеДокументы (локОперация);
  end;

inclass private

  func ПолучитьОписаниеПозиции (локОперация: Бюджет_ЗПиДД.РасчетныеОперации.Начисление): string;
    if (локОперация.ПостояннаяОперация <> nil):
      Result = локОперация.ПостояннаяОперация.Комментарий;
    fi;
    if (Result = nil):
      Result = локОперация.Расчет.Подшивка.Комментарий;
    fi;
  end;

  func ПолучитьДанныеРасчетов (локОперация: Бюджет_ЗПиДД.РасчетныеОперации.Начисление): Storage; -- [н,уНДФЛ,уИЛ,уПроч,уВсего]
    var locFlt: string[];
    Result = Storage.Create;
    Result.Начислено = локОперация.СуммаКУчету;
    with Query.Create([Бюджет_ЗПиДД.РасчетныеОперации.Удержание]) do
      locFlt[1] = 'Расчет.DocId=' + Str(локОперация.Расчет.DocId);
      locFlt[2] = 'КодОбязательства="40"';
      locFlt[3] = 'ВидУдержания.ТипРасчета.Код="5110"';
      Filter = СИС2.СтроковыеФункции.СложитьСтрокиФильтраПоИ(locFlt);
      Result.УдержаноНДФЛ = CalcAggregates('Sum(СуммаКУчету)') as numeric;
      locFlt[3] = 'SubStr(ВидУдержания.ТипРасчета.Код,1,2)="53"';
      Filter = СИС2.СтроковыеФункции.СложитьСтрокиФильтраПоИ(locFlt);
      Result.УдержаноИЛ = CalcAggregates('Sum(СуммаКУчету)') as numeric;
      locFlt[3] = nil;
      Filter = СИС2.СтроковыеФункции.СложитьСтрокиФильтраПоИ(locFlt);
      Result.УдержаноВсего = CalcAggregates('Sum(СуммаКУчету)') as numeric;
      Result.УдержаноПрочего = Result.УдержаноВсего - (Result.УдержаноНДФЛ + Result.УдержаноИЛ);
      Result.КВыдаче = (Result.Начислено - Result.УдержаноВсего);
    end;
  end;

  func ПолучитьПлатежныеДокументы (локОперация: Бюджет_ЗПиДД.РасчетныеОперации.Начисление): Бюджет_ЗПиДД.УчетВыплат.ПлатДок[];
    var locFlt: string[];
    var i: integer;
    with Query.Create([Бюджет_ЗПиДД.УчетВыплат.Выплаты]) do
      locFlt = nil;
      locFlt[1] = 'Расчет.DocId=' + Str(локОперация.Расчет.DocId);
      locFlt[2] = 'SubStr(ВидОбязательства.ТипРасчета.Код,2,2)="40"';
      Filter = СИС2.СтроковыеФункции.СложитьСтрокиФильтраПоИ(locFlt);
      Order = 'ПлатежныйДокумент.Дата';
      Select;
      while not Eof do
        i = i + 1;
        Result[i] = Current.ПлатежныйДокумент;
        Next;
      od;
    end;
  end;

inobject public

  КодУчетногоПериода: string;
  МесяцГод: string; --заголовок строки
  ОписаниеПозиции: string;
  Начислено: numeric;

  УдержаноНДФЛ: numeric;
  УдержаноИЛ: numeric;
  УдержаноВсего: numeric;
  УдержаноПрочего: numeric;

  КВыдаче: numeric;

  ПлатежныеДокументы: Бюджет_ЗПиДД.УчетВыплат.ПлатДок[];

  func ОписаниеПлатежныхДокументов: string;
    var i: integer;
    var locResult: string[];
    var ДокРпв: Бюджет_ЗПиДД.Документы.Касса.Рпв0504401;
    var ДокПв:  Бюджет_ЗПиДД.Документы.Касса.Пв0504403;
    var ДокРПБ: Бюджет_ЗПиДД.Документы.Банк.РеестрПеречислений;
    for i = 1 .. LengthOfArray(ПлатежныеДокументы) do
      ДокРпв = СИС2.ФункцииДокумента.QueryRecord(Бюджет_ЗПиДД.Документы.Касса.Рпв0504401, 'ПлатДок=' + Str(ПлатежныеДокументы[i]));
      ДокПв  = if(ДокРпв = nil, СИС2.ФункцииДокумента.QueryRecord(Бюджет_ЗПиДД.Документы.Касса.Пв0504403, 'ПлатДок=' + Str(ПлатежныеДокументы[i])), nil);
      ДокРПБ = if(ДокПв = nil, СИС2.ФункцииДокумента.QueryRecord(Бюджет_ЗПиДД.Документы.Банк.РеестрПеречислений, 'ПлатДок=' + Str(ПлатежныеДокументы[i])), nil);
      if (ДокРпв <> nil):                       locResult[i] = 'РПВ № '   + ДокРпв.НомерБум + ' (' + Str(ДокРпв.Дата) + ')'; fi;
      if (locResult = nil): if (ДокПв <> nil):  locResult[i] = 'ПВ № '    + ДокПв.НомерБум  + ' (' + Str(ДокПв.Дата) + ')'; fi; fi;
      if (locResult = nil): if (ДокРПБ <> nil): locResult[i] = 'РПБ № '   + ДокРПБ.НомерБум + ' (' + Str(ДокРПБ.Дата) + ')'; fi; fi;
      if (locResult = nil):                     locResult[i] = 'док. №  ' + Str(ПлатежныеДокументы[i].DocId)  + ' (' + Str(ПлатежныеДокументы[i].ДатаУчета) + ')'; fi;
    od;
    Result = СИС2.СтроковыеФункции.МассивСтрокВТекст(locResult);
  end;


end